--Thêm vô controler

public ActionResult exportReport()
        {
            ReportDocument rd = new ReportDocument();
            rd.Load(Path.Combine(Server.MapPath("~/Reports"), "ReportPhieuLapThe.rpt"));
            rd.SetDataSource(db.PhieuLapThes.Select(plt => new
            {
                TenTK = plt.TenTK,
                MatKhau = plt.MatKhau,
                HoVaTen = plt.HoVaTen,
                NgaySinh = plt.NgaySinh,
                DiaChi = plt.DiaChi,
                Email = plt.Email,
                NgayLapThe = plt.NgayLapThe,               
            }).ToList());
            Response.Buffer = false;
            Response.ClearContent();
            Response.ClearHeaders();
            try
            {
                Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
                stream.Seek(0, SeekOrigin.Begin);
                return File(stream, "application/pdf", "List_PhieuLapThe.pdf");
            }
            catch
            {
                throw;
            }
        }

--Thêm vô Index d? t?o nut in
<br/><br/>
<a class="btn btn-success" href="@Url.Action("exportReport")">Dowload Report</a>









using CrystalDecisions.CrystalReports.Engine;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace QLDaiLy.Controllers
{
    public class BaoCaoController : Controller
    {
        private QL_DAILYEntities db = new QL_DAILYEntities();
        //
        // GET: /BaoCao/
        public ActionResult Index()
        {
            ViewBag.page = "baocao";
            return View();
        }
        public ActionResult exportReport()
        {
            ReportDocument rd = new ReportDocument();
            rd.Load(Path.Combine(Server.MapPath("~/Reports"), "ReportDoanhThu.rpt"));
            rd.SetDataSource(db.PhieuXuatHangs.Select(pxh => new
            {
                MaPhieuXuat = pxh.MaPhieuXuat,
                NgayLapPhieuDat = pxh.NgayLapPhieuDat,
                NgayLapPhieuXuat = pxh.NgayLapPhieuXuat,
                TongTien = pxh.TongTien,
                MaDL = pxh.MaDL,
                TenDL = pxh.DaiLy.TenDL,
            }).ToList());
            Response.Buffer = false;
            Response.ClearContent();
            Response.ClearHeaders();
            try
            {
                Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
                stream.Seek(0, SeekOrigin.Begin);
                return File(stream, "application/pdf", "List_PhieuLapThe.pdf");
            }
            catch
            {
                throw;
            }
        }
    }
}